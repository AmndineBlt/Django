from django.core.management import call_command
from django.contrib.auth.models import User
from faker import Faker

faker = Faker('fr_FR')

def run(n=10, clean=False):
    """GÃ©nÃ¨re n utilisateurs de test"""
    if clean:
        print("ğŸ§¹ Suppression des utilisateurs existants (sauf superusers)...")
        User.objects.filter(is_superuser=False).delete()

    print(f"ğŸ‘¥ GÃ©nÃ©ration de {n} nouveaux utilisateurs...")

    created_count = 0
    for _ in range(n):
        username = faker.user_name()
        email = faker.email()
        password = "testpass"

        # Ã‰vite les doublons
        if not User.objects.filter(username=username).exists():
            User.objects.create_user(username=username, email=email, password=password)
            created_count += 1

    print(f"âœ… {created_count} nouveaux utilisateurs crÃ©Ã©s")
    print(f"ğŸ“Š Total utilisateurs: {User.objects.count()}")

    # ğŸ’¾ Dump des donnÃ©es
    with open("library/fixtures/users.json", "w", encoding="utf-8") as f:
        call_command("dumpdata", "auth.User", indent=2, stdout=f)
    print("ğŸ’¾ Fixture users.json gÃ©nÃ©rÃ©e.")